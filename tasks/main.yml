---

- name: pull from remote sshkey vault
  git: repo="{{ remote_sshkey_vault_repo }}" dest="{{ local_sshkey_vault_repo }}" update=yes
  become: no
  delegate_to: localhost
  run_once: true
  when: remote_sshkey_vault_repo is defined and local_sshkey_vault_repo is defined

- name: copy host access config to vars/
  copy: src="{{ local_sshkey_vault_repo }}/host_confs/{{inventory_hostname}}.yml" dest="roles/{{ role_name }}/vars/"
  become: no
  delegate_to: localhost
  register: copyconf
  when: local_sshkey_vault_repo is defined

- name: include access config
  include_vars: "{{inventory_hostname}}.yml"
  when: copyconf.changed

# for try/except emulation
- name: "temporary remove roles/{{ role_name }}/vars/{{inventory_hostname}}.yml"
  file: path="roles/{{ role_name }}/vars/{{ inventory_hostname }}.yml" state=absent
  delegate_to: localhost
  become: no
  when: copyconf.changed

- name: gather facts
  setup:
  when: not gather_facts and copyconf.changed

- name: detect ssh ecdsa implementation
  set_fact: ssh_algs="{{ ssh_algs  + ['ecdsa']}}"
  when: ansible_ssh_host_key_ecdsa_public is defined

- name: detect ssh ed25519 implementation
  set_fact: ssh_algs="{{ ssh_algs  + ['ed25519']}}"
  when: ansible_ssh_host_key_ed25519_public is defined

- name: assemble and deploy authorized_keys
  authorized_key: user="{{ item.user }}" key="{% for alg in item.algs %}{% if alg.name in ssh_algs %}{{ alg.authorized | join('\n') + '\n'}}{% endif %}{% endfor %}" exclusive=yes
  with_items:
        - "{{ users }}"
  when: copyconf.changed

- name: "place back roles/{{ role_name }}/vars/{{ inventory_hostname }}.yml if all ok"
  copy: src="{{ local_sshkey_vault_repo }}/host_confs/{{inventory_hostname}}.yml" dest="roles/{{ role_name }}/vars/"
  delegate_to: localhost
  become: no
  when: copyconf.changed

